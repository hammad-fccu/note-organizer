I'll explore the codebase structure for you.

Ran tool
This appears to be a Next.js project with TypeScript and Tailwind CSS. Let's examine the main source code directory.

Ran tool
Let's check the app directory which is the main structure in a Next.js application:

Ran tool
Let's look at the components directory to understand what UI components are available:

Ran tool
Let's also look at the store to understand state management:

Ran tool
Let's look at the package.json to understand dependencies and scripts:

Read file: package.json
Now, let's look at the main page file:

Read file: src/app/page.tsx
Let's look at the NoteStore to understand how data is managed:

Read file: src/store/NoteStore.tsx
Let's check the types:

Ran tool

Read file: src/types/note.ts
Let's look at the app directory structure:

Ran tool
Let's also take a look at the application layout:

Read file: src/app/app/layout.tsx
Let's look at the flashcards functionality:

Ran tool
Let's look at the note functionality:

Ran tool
Based on the exploration so far, I'll provide a summary of the codebase structure and functionality:

This is a Next.js application for a Smart Note Organizer with the following features:

1. **Core Functionality**:
   - Note taking and organization
   - PDF and text import
   - AI-powered summaries and tagging
   - Flashcard generation (with Anki export)
   - Folder-based organization

2. **Technology Stack**:
   - Next.js 15.3.2 with React 19
   - TypeScript
   - Tailwind CSS for styling
   - NextAuth for authentication
   - TipTap for rich text editing
   - Tesseract.js for OCR processing
   - IndexedDB (via idb package) for client-side storage

3. **Project Structure**:
   - `/src/app` - Next.js app router structure
   - `/src/components` - Reusable UI components
   - `/src/store` - State management using React Context
   - `/src/types` - TypeScript interfaces for data structures
   - `/src/utils` - Utility functions

4. **Data Management**:
   - Notes and folders are stored in browser localStorage
   - Notes can have tags, summaries, and be organized in folders
   - State is managed through context provider in NoteStore.tsx

5. **Key Features**:
   - Authentication flow
   - Document import and OCR processing
   - Note editor with rich text capabilities
   - Folder and tag-based organization
   - Flashcard generation for study purposes
   - AI summarization of notes

The application follows a modern React architecture with client-side rendering and local storage persistence. It appears to be a comprehensive note-taking application with features specifically designed for students and researchers.


